name: Build with Tests

on: [push]

jobs:
  build_and_test_Windows:
    name: Build and run Tests on Windows
    runs-on: windows-latest

    env:
      IsRunningOnGitHubActions: 'true'
      UseInMemory: 'true'

    steps:  
    - uses: actions/checkout@v4
              
    - name: Build
      run: |
        dotnet build ./src/System.Linq.Dynamic.Core/System.Linq.Dynamic.Core.csproj -c Release -p:buildType=azure-pipelines-ci

    - name: Run Tests EFCore net8.0
      run: |
        dotnet test ./test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj -c Release -p:buildType=azure-pipelines-ci

  build_and_test_Linux:
    name: Build and run Tests on Linux
    runs-on: ubuntu-latest

    env:
      IsRunningOnGitHubActions: 'true'

    steps:  
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
       dotnet-version: |
         6.0.x
         7.0.x
         8.0.x

    - name: Install dotnet tools
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage

    - name: Begin analysis on SonarCloud
      run: |
        dotnet sonarscanner begin /k:"zzzprojects_System.Linq.Dynamic.Core" /o:"zzzprojects" /d:sonar.branch.name=$(Build.SourceBranchName) /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="$(SONAR_TOKEN)" /d:sonar.pullrequest.provider=github /d:sonar.dotnet.excludeTestProjects=true /d:sonar.cs.vscoveragexml.reportsPaths=**/dynamic-coverage-*.xml /d:sonar.verbose=true
              
    - name: Build
      run: |
        dotnet build ./src/System.Linq.Dynamic.Core/System.Linq.Dynamic.Core.csproj -c Release -p:buildType=azure-pipelines-ci

    - name: Run Tests EF net8.0 (with Coverage)
      run: |
        dotnet-coverage collect "dotnet test ./test/EntityFramework.DynamicLinq.Tests/EntityFramework.DynamicLinq.Tests.csproj --configuration Release --framework net8.0 -p:buildType=azure-pipelines-ci" -f xml -o "dynamic-coverage-ef.xml"
        
    - name: Run Tests EFCore net8.0 (with Coverage)
      run: |
        dotnet-coverage collect "dotnet test ./test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj --configuration Release -p:buildType=azure-pipelines-ci" -f xml -o "dynamic-coverage-efcore.xml"
        
    - name: End analysis on SonarCloud
      run: |
        dotnet sonarscanner end /d:sonar.token="$(SONAR_TOKEN)"

    - name: Run Tests EFCore net7.0
      run: |
        dotnet test ./test/System.Linq.Dynamic.Core.Tests.Net7/System.Linq.Dynamic.Core.Tests.Net7.csproj -c Release -p:buildType=azure-pipelines-ci

    - name: Run Tests EFCore net6.0
      run: |
        dotnet test ./test/System.Linq.Dynamic.Core.Tests.Net6/System.Linq.Dynamic.Core.Tests.Net6.csproj -c Release -p:buildType=azure-pipelines-ci